@page
@model IndexModel
@{
    ViewData["Title"] = "Abstract Art Cars List";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/styles.css" rel="stylesheet">
</head>
<body>
    <marquee behavior="scroll" direction="left" scrollamount="10">
        <div>
            <h1>Welcome to the Abstract Art Cars List!</h1>
            <h2>Cars List</h2>

            <table class="table table-striped abstract-table">
                <thead class="thead-dark">
                    <tr>
                        <th>Id</th>
                        <th>Make</th>
                        <th>Model</th>
                        <th>Year</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="carsTableBody">
                </tbody>
            </table>

            <div class="form-section abstract-form">
                <h2>Add New Car</h2>
                <form id="addCarForm">
                    <div class="form-group">
                        <label for="make">Make:</label>
                        <input type="text" id="make" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="model">Model:</label>
                        <input type="text" id="model" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="year">Year:</label>
                        <input type="number" id="year" class="form-control" required />
                    </div>
                    <button type="submit" class="btn abstract-btn">Add Car</button>
                </form>
            </div>

            <div class="form-section abstract-form" id="editCarSection" style="display:none;">
                <h2>Edit Car</h2>
                <form id="editCarForm">
                    <input type="hidden" id="editId" />
                    <div class="form-group">
                        <label for="editMake">Make:</label>
                        <input type="text" id="editMake" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="editModel">Model:</label>
                        <input type="text" id="editModel" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label for="editYear">Year:</label>
                        <input type="number" id="editYear" class="form-control" required />
                    </div>
                    <button type="submit" class="btn abstract-btn">Update Car</button>
                </form>
            </div>

            <img src="https://images.vexels.com/media/users/3/177474/isolated/preview/7182cf171ce23e7beef2186acf5b5f4d-duck-wink-muzzle-head-flat-by-vexels.png" alt="Winking Duck" class="winking-duck">

            <button id="clickMeButton1" class="btn abstract-btn">Click Me</button>
            <button id="clickMeButton2" class="btn abstract-btn">Click Me</button>
            <button id="clickMeButton3" class="btn abstract-btn">Click Me</button>
        </div>
    </marquee>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script>
        async function fetchCars() {
            const response = await fetch('https://localhost:7292/api/cars');
            const cars = await response.json();
            const tableBody = document.getElementById('carsTableBody');
            tableBody.innerHTML = '';
            cars.forEach(car => {
                const row = document.createElement('tr');
                row.innerHTML = `<td>${car.id}</td><td>${car.make}</td><td>${car.model}</td><td>${car.year}</td>
                                                 <td>
                                                    <button class="btn btn-warning btn-sm abstract-btn" onclick="editCar(${car.id})">Edit</button>
                                                    <button class="btn btn-danger btn-sm abstract-btn" onclick="deleteCar(${car.id})">Delete</button>
                                                 </td>`;
                tableBody.appendChild(row);
            });
        }

        document.getElementById('addCarForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const make = document.getElementById('make').value;
            const model = document.getElementById('model').value;
            const year = document.getElementById('year').value;
            await fetch('https://localhost:7292/api/cars', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ make, model, year })
            });
            fetchCars();
        });

        async function editCar(id) {
            const response = await fetch(`https://localhost:7292/api/cars`);
            const cars = await response.json();
            const car = cars.find(c => c.id === id);
            document.getElementById('editId').value = car.id;
            document.getElementById('editMake').value = car.make;
            document.getElementById('editModel').value = car.model;
            document.getElementById('editYear').value = car.year;
            document.getElementById('editCarSection').style.display = 'block';
        }

        document.getElementById('editCarForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const id = document.getElementById('editId').value;
            const make = document.getElementById('editMake').value;
            const model = document.getElementById('editModel').value;
            const year = document.getElementById('editYear').value;
            await fetch(`https://localhost:7292/api/cars/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ id, make, model, year })
            });
            document.getElementById('editCarSection').style.display = 'none';
            fetchCars();
        });

        async function deleteCar(id) {
            await fetch(`https://localhost:7292/api/cars/${id}`, {
                method: 'DELETE'
            });
            fetchCars();
        }

        fetchCars();

        // Moving button functionality
        const buttons = document.querySelectorAll('.abstract-btn');
        buttons.forEach(button => {
            button.addEventListener('mouseover', () => {
                const x = Math.random() * (window.innerWidth - button.clientWidth);
                const y = Math.random() * (window.innerHeight - button.clientHeight);
                button.style.position = 'absolute';
                button.style.transition = 'all 0.5s ease';
                button.style.left = `${x}px`;
                button.style.top = `${y}px`;
            });
        });

        // Smooth continuous movement and rotation for all elements with different timeouts
        const elements = document.querySelectorAll('body *');
        elements.forEach(element => {
            function moveElement() {
                const x = (Math.random() - 0.5) * 20;
                const y = (Math.random() - 0.5) * 20;
                const rotation = (Math.random() - 0.5) * 20;
                const timeout = Math.random() * 2000 + 1000; // Random timeout between 1s and 3s
                element.style.transition = 'transform 2s ease';
                element.style.transform = `translate(${x}px, ${y}px) rotate(${rotation}deg)`;
                setTimeout(moveElement, timeout);
            }
            moveElement();
        });
    </script>
</body>
</html>
